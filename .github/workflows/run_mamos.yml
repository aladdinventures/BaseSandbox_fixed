
name: MAMOS CI/CD Pipeline

on: # Trigger the workflow manually with inputs
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Project name to run CI/CD for (e.g., backend, frontend)'
        required: true
        type: string
      deploy_environment:
        description: 'Deployment environment (e.g., Test, Staging, Production)'
        required: false
        type: string

env:
  PYTHONUNBUFFERED: "1" # Ensure Python output is unbuffered

jobs:
  run-mamos-ci-cd:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push reports back to the repository
      pull-requests: write # Potentially required for PR status updates
      checks: write # Required for check runs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML requests

      - name: Run MAMOS CI/CD
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} # Render API Key for deployments
        run: |
          python infra/ci-cd/mamos_runner.py \
            --project ${{ github.event.inputs.project_name }} \
            ${{ github.event.inputs.deploy_environment && format('--deploy-env {0}', github.event.inputs.deploy_environment) || '' }}

      - name: Upload CI/CD Reports
        uses: actions/upload-artifact@v4
        with:
          name: mamos-ci-cd-reports-${{ github.event.inputs.project_name }}
          path: reports/

      - name: Commit and Push Reports (if successful)
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/
          git commit -m "CI/CD: MAMOS reports for ${{ github.event.inputs.project_name }}" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

